Program GERDIR ;
{FUP QUE A PARTIR DO ARQUIVO CAND.TXT GERE UM ARQUIVO PARA ACESSO DIRETO CAND.DIR
 IRÁ USAR O CONCEITO DE TAMANHO DE REGISTRO QUE POSSUIRÁ OS CAMPOS:
 NUMERO=INTEGER, NOME=STRING[35], CPF=STRING[11], DATA=STRING[8], INVERTIDA AAAAMMDD, CARGO=INTEGER
 (informaçoes que serão lidas de cand.txt) e mais os campos abaixo
 notas(6)=integer, soma das notas=integer, classif geral, classif cargo, cargo de classif E FALTA=todos integer
															 848 BITS no total
   ATENÇÃO     ATENÇÃO    ATENÇÃO    ATENÇÃO    ATENÇÃO    ATENÇÃO    ATENÇÃO    ATENÇÃO    
  SÓ É POSSIVEL VER O CONTEÚDO DO ARQUIVO gerado ATRAVÉS DE UM PROGRAMA QUE IRÁ LER OS REGISTROS
	}
USES BIBLIONT;
VAR ARQS:TEXT;             //nomes logico..entrada
    ARQD:FILE OF REGIS;    //nome logico ...saida
    REGS:STRING[60];       //registro entrada
    REGD:REGIS;            //registro saida
    A,B,E,NUM:INTEGER;
Begin
  ASSIGN(ARQS,'CAND.TXT');
  RESET(ARQS);
  ASSIGN(ARQD,'CAND.DIR');
  REWRITE(ARQD);
  WHILE NOT EOF(ARQS) DO
   BEGIN
    READLN(ARQS,REGS);//RETIRA DO ARQ E LEVA PARA MP AS INFORMAÇOES DE UM REGISTRO
//MONTA O REGISTRO QUE IRÁ PARA ARQD
    VAL(COPY(REGS,1,4),NUM,E);      //RETIRA O NUMERO DO STRING
    REGD.NUM:=NUM;                  //NUMERO
    REGD.NOME:=COPY(REGS,5,35);     //NOME
    REGD.CPF:=COPY(REGS,40,11);     //CPF
    REGD.DATA.DIA:=COPY(REGS,51,2); //DIA
    REGD.DATA.MES:=COPY(REGS,53,2); //MES
    REGD.DATA.ANO:=COPY(REGS,55,4); //ANO
    VAL(COPY(REGS,59,2),REGD.CAR,E);//CARGO
//POSICIONA
    SEEK(ARQD,NUM-1); //a primeira p.f. é o numero 0.
//  SEEK(ARQD,A); //<<<<<<COMPARE COM O QUE GERA SAI.DIR (ARQDIR)
//GRAVA NA POSICAO FISICA INDICADA POR NUM (CAMPO CHAVE) - 1
    WRITE(ARQD,REGD);
		A:=A+1
	 END;
	 WRITELN('GRAVADOS=>',A:5,' REGISTROS--VEJA O TAMANHO DO ARQUIVO -cand.DIR- (ENTER PARA ENCERRAR)');
	 READLN;
	 CLOSE(ARQS);
	 CLOSE(ARQD);  
End.